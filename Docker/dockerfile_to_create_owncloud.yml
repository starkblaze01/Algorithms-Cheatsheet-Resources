
# Owncloud is a suite of clientâ€“server software for creating and using file hosting services.The Server Edition of ownCloud is free and open-source.

# You can deploy a owncloud architecture inside Docker
# container and have linked with mariadb and redis
# which is again deployed inside another container.
# Three containers are deployed and attached to persistent storage that guarantees no data loss in case the containers crash.
# This three tier architecture is created using Docker-Compose
# which allows this containers to be launched within few seconds. Docker-Compose contains file in .yml format
# and just by one click all the containers are launched together.


version: '2.1'

volumes:
  files_storage1:
  mysql_storage1:
  backup_storage1:
  redis_storage1:

services:
  owncloud:
    image: owncloud/server:latest
    restart: always
    ports:
      - 80:8080
    depends_on:
      - db
      - redis
    environment:
       OWNCLOUD_DOMAIN: domain_cloud
       OWNCLOUD_DB_TYPE: mysql
       OWNCLOUD_DB_NAME: owncloud
       OWNCLOUD_DB_USERNAME: owncloud
       OWNCLOUD_DB_PASSWORD: owncloud
       OWNCLOUD_DB_HOST: db
       OWNCLOUD_ADMIN_USERNAME: admin
       OWNCLOUD_ADMIN_PASSWORD: root
       OWNCLOUD_MYSQL_UTF8MB4: "true"
       OWNCLOUD_REDIS_ENABLED: "true"
       OWNCLOUD_REDIS_HOST: redis
    healthcheck:
      test: ["CMD", "/usr/bin/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - files_storage1:/mnt/data

  db:
    image: webhippie/mariadb:latest
    restart: always
    environment:
       MARIADB_ROOT_PASSWORD: owncloud
       MARIADB_USERNAME: owncloud
       MARIADB_PASSWORD: owncloud
       MARIADB_DATABASE: owncloud
       MARIADB_MAX_ALLOWED_PACKET: 128M
       MARIADB_INNODB_LOG_FILE_SIZE: 64M
    healthcheck:
      test: ["CMD", "/usr/bin/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - mysql_storage1:/var/lib/mysql
      - backup_storage1:/var/lib/backup

  redis:
    image: webhippie/redis:latest
    restart: always
    environment:
       REDIS_DATABASES: 1
    healthcheck:
      test: ["CMD", "/usr/bin/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - redis_storage1:/var/lib/redis
